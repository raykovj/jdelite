define("modules/layout/flowLayout",["modules/geometry/rectangle","modules/geometry/dimension","modules/common/map","modules/common/utils","modules/graph/cell","modules/graph/gridCell","modules/graph/nodeCell","modules/graph/level","modules/graph/levelPipe","modules/graph/lane","modules/graph/lanePipe","modules/graph/graphNode","modules/graph/graphConstants","modules/graph/modelUtils","modules/layout/pipeUtils","modules/layout/nodesLayoutUtils","modules/layout/edgesLayoutUtils","modules/layout/nodesLayout","modules/layout/edgesLayout","modules/layout/nodesCollector","modules/settings/config","modules/diagram/diagramUtils"],function(e,l,t,n,s,o,i,a,g,r,d,h,c,v,u,p,f,P,L,w,m,N){function R(e){function s(e){return U.isFixOrRetry(e)}function i(e){return U.isRetryRedoOrFail(e)}function a(e){var l=!1;if(j&&console.log("*** start layoutNodes, fix mode = "+m.getLayoutMode()+", orientation="+m.getFlowDirection()),m.getLayoutMode()===c.layoutMode().MANUAL){var t,s,o=p.getUnallocatedNodes(k);if(o.length>0){for(Z.nodesList=n.subtractArrays(Z.nodesList,o),z.getModelHandler().updateFlowNodes(Z.nodesList),z.resetUndoManager(),s=[],t=0;t<o.length;t++)o[t].setVisible(!1),s+="\n\t"+o[t].printShort();z.getCaller().showInfoMessage("Found unallocated nodes, excluded nodes:"+s)}var i=p.getOverlappingNodes(k);if(i.length>0){for(Z.nodesList=n.subtractArrays(Z.nodesList,i),z.getModelHandler().updateFlowNodes(Z.nodesList),z.resetUndoManager(),s=[],t=0;t<i.length;t++)i[t].setVisible(!1),s+="\n\t"+i[t].printShort();z.getCaller().showInfoMessage("Found overlapping nodes, excluded nodes:"+s)}e.layoutNodesManual(),l=!0}else m.getLayoutMode()==c.layoutMode().AUTO&&(p.detachAll(k),l=e.layoutNodesAutoLayout());return r(),l}function r(){var e;for(e=0;e<Z.levels.length;e++)Z.levels[e].adjustSize();for(e=0;e<Z.lanes.length;e++)Z.lanes[e].adjustSize()}function h(e,l){j&&console.log("======= adjustEdgesLayout: "+l);var t=O();return A(t),C(),R(e,!1),F(),E(),M(),H(),F(),t}function f(){for(var e=0;e<Z.edgesList.length;e++){var l=Z.edgesList[e],t=l.getTotalShifts();t.length>0&&l.chainSegments();for(var n=0;n<t.length;n++){var s=t[n],o=s.order,i=s.pipeShift;if(l.getSegments().length>0&&o>=0&&o<l.getSegments().length&&i&&0!==i){var a,g=l.getSegments()[o],r=g.getPipe(),d=r.getOrder(),h=d+i;r.getType()===c.pipeType().LEVEL_PIPE&&h>=0&&h<Z.levelPipes.length?a=Z.levelPipes[h]:r.getType()===c.pipeType().LANE_PIPE&&h>=0&&h<Z.lanePipes.length&&(a=Z.lanePipes[h]),a?(r.removeSegmentFromPipe(g),a.addSegmentToPipe(g),g.setPipe(a)):alert("Index out of bound for link: "+l.getName()+", segment order: "+o)}}}}function R(e,l){j&&console.log("******************************* start layoutEdges: "+l);var t;for(t=0;t<Z.levelPipes.length;t++)Z.levelPipes[t].clearChannels(),Z.levelPipes[t].clearSegmentsCache();for(t=0;t<Z.lanePipes.length;t++)Z.lanePipes[t].clearChannels(),Z.lanePipes[t].clearSegmentsCache();for(t=0;t<Z.levels.length;t++)Z.levels[t].clearSegments();for(t=0;t<Z.lanes.length;t++)Z.lanes[t].clearSegments();for(t=0;t<Z.edgesList.length;t++)Z.edgesList[t].clearSegments();if(Z.levels.length>0&&0===Z.levelPipes.length)for(t=0;t<=Z.levels.length;t++)Z.levelPipes.push(new g(t));if(Z.lanes.length>0&&0===Z.lanePipes.length)for(t=0;t<=Z.lanes.length;t++)Z.lanePipes.push(new d(t));for(l&&T(),t=0;t<Z.edgesList.length;t++)Z.edgesList[t].isValid()&&Z.edgesList[t].isVisible()&&e.traceEdge(Z.edgesList[t]);f()}function y(){j&&console.log("***/// adjustCorridorsAndPipes:");var e,t=0,n=0;for(e=0;e<Z.levels.length;e++){var s=Z.levels[e];t+=m.getFlowDirection()===c.flow().HORIZONTAL?s.width:s.height}for(e=0;e<Z.levelPipes.length;e++){var o=Z.levelPipes[e];o.reassignSegmentsToChannels(),t+=o.getExtent()}for(e=0;e<Z.lanes.length;e++){var i=Z.lanes[e];n+=m.getFlowDirection()===c.flow().HORIZONTAL?i.height:i.width}for(e=0;e<Z.lanePipes.length;e++){var a=Z.lanePipes[e];a.reassignSegmentsToChannels(),n+=a.getExtent()}return m.getFlowDirection()===c.flow().HORIZONTAL?new l(t,n):new l(n,t)}function O(){j&&console.log("@@@@ Flowlayout: reAdjustCorridorsAndPipes");var e,t=0;for(e=0;e<Z.levels.length;e++){var n=Z.levels[e];t+=m.getFlowDirection()===c.flow().HORIZONTAL?n.width:n.height}for(e=0;e<Z.levelPipes.length;e++){var s=Z.levelPipes[e];s.reassignSegmentsToChannels(),t+=s.getExtent()}var o=0;for(e=0;e<Z.lanes.length;e++){var i=Z.lanes[e];o+=m.getFlowDirection()===c.flow().HORIZONTAL?i.height:i.width}for(e=0;e<Z.lanePipes.length;e++){var a=Z.lanePipes[e];a.reassignSegmentsToChannels(),o+=a.getExtent()}return m.getFlowDirection()===c.flow().HORIZONTAL?new l(t,o):new l(o,t)}function S(){j&&console.log("@@@@@ FlowLayout: recalculateDimension");var e,t=0,n=0;for(e=0;e<Z.levels.length;e++){var s=Z.levels[e];t+=m.getFlowDirection()===c.flow().HORIZONTAL?s.width:s.height}for(e=0;e<Z.levelPipes.length;e++){t+=Z.levelPipes[e].getExtent()}for(e=0;e<Z.lanes.length;e++){var o=Z.lanes[e];n+=m.getFlowDirection()===c.flow().HORIZONTAL?o.height:o.width}for(e=0;e<Z.lanePipes.length;e++){n+=Z.lanePipes[e].getExtent()}return m.getFlowDirection()===c.flow().HORIZONTAL?new l(t,n):new l(n,t)}function A(e){var l;for(l=0;l<Z.levels.length;l++)Z.levels[l].adjustGlobalSize(m.getFlowDirection()===c.flow().HORIZONTAL?e.height:e.width);for(l=0;l<Z.lanes.length;l++)Z.lanes[l].adjustGlobalSize(m.getFlowDirection()===c.flow().HORIZONTAL?e.width:e.height);for(l=0;l<Z.levelPipes.length;l++)Z.levelPipes[l].adjustGlobalSize(m.getFlowDirection()===c.flow().HORIZONTAL?e.height:e.width);for(l=0;l<Z.lanePipes.length;l++)Z.lanePipes[l].adjustGlobalSize(m.getFlowDirection()===c.flow().HORIZONTAL?e.width:e.height)}function T(){if(j&&console.log("@ FlowLayout: preAdjustGridPositions"),m.getFlowDirection()===c.flow().HORIZONTAL){var e=0;if(Z.levels.length>0){for(;e<Z.levels.length;)Z.levelPipes[e].setRectLocation(e>0?Z.levels[e-1].x+Z.levels[e-1].width:0,0),Z.levels[e].setRectLocation(Z.levelPipes[e].x+Z.levelPipes[e].width,0),e++;Z.levelPipes[e].setRectLocation(Z.levels[e-1].x+Z.levels[e-1].width,0)}if(e=0,Z.lanes.length>0){for(;e<Z.lanes.length;)Z.lanePipes[e].setRectLocation(0,e>0?Z.lanes[e-1].y+Z.lanes[e-1].height:0),Z.lanes[e].setRectLocation(0,Z.lanePipes[e].y+Z.lanePipes[e].height),e++;Z.lanePipes[e].setRectLocation(0,Z.lanes[e-1].y+Z.lanes[e-1].height)}}else if(m.getFlowDirection()===c.flow().VERTICAL){if(e=0,Z.levels.length>0){for(;e<Z.levels.length;)Z.levelPipes[e].setRectLocation(0,e>0?Z.levels[e-1].y+Z.levels[e-1].height:0),Z.levels[e].setRectLocation(0,Z.levelPipes[e].y+Z.levelPipes[e].height),e++;Z.levelPipes[e].setRectLocation(0,Z.levels[e-1].y+Z.levels[e-1].height)}if(e=0,Z.lanes.length>0){for(;e<Z.lanes.length;)Z.lanePipes[e].setRectLocation(e>0?Z.lanes[e-1].x+Z.lanes[e-1].width:0,0),Z.lanes[e].setRectLocation(Z.lanePipes[e].x+Z.lanePipes[e].width,0),e++;Z.lanePipes[e].setRectLocation(Z.lanes[e-1].x+Z.lanes[e-1].width,0)}}}function C(){if(m.getFlowDirection()===c.flow().HORIZONTAL){var e=0;if(Z.levels.length>0&&Z.levelPipes.length>0){for(;e<Z.levels.length;)Z.levelPipes[e].setRectLocation(e>0?Z.levels[e-1].x+Z.levels[e-1].width:0,0),Z.levels[e].setRectLocation(Z.levelPipes[e].x+Z.levelPipes[e].width,0),e++;Z.levelPipes[e].setRectLocation(Z.levels[e-1].x+Z.levels[e-1].width,0)}if(e=0,Z.lanes.length>0&&Z.lanePipes.length>0){for(;e<Z.lanes.length;)Z.lanePipes[e].setRectLocation(0,e>0?Z.lanes[e-1].y+Z.lanes[e-1].height:0),Z.lanes[e].setRectLocation(0,Z.lanePipes[e].y+Z.lanePipes[e].height),e++;Z.lanePipes[e].setRectLocation(0,Z.lanes[e-1].y+Z.lanes[e-1].height)}}else if(m.getFlowDirection()===c.flow().VERTICAL){if(e=0,Z.levels.length>0&&Z.levelPipes.length>0){for(;e<Z.levels.length;)Z.levelPipes[e].setRectLocation(0,e>0?Z.levels[e-1].y+Z.levels[e-1].height:0),Z.levels[e].setRectLocation(0,Z.levelPipes[e].y+Z.levelPipes[e].height),e++;Z.levelPipes[e].setRectLocation(0,Z.levels[e-1].y+Z.levels[e-1].height)}if(e=0,Z.lanes.length>0&&Z.lanePipes.length>0){for(;e<Z.lanes.length;)Z.lanePipes[e].setRectLocation(e>0?Z.lanes[e-1].x+Z.lanes[e-1].width:0,0),Z.lanes[e].setRectLocation(Z.lanePipes[e].x+Z.lanePipes[e].width,0),e++;Z.lanePipes[e].setRectLocation(Z.lanes[e-1].x+Z.lanes[e-1].width,0)}}for(e=0;e<Z.levels.length;e++)for(var l=Z.levels[e],t=l.getCells(),n=0;n<t.length;n++){var s=t[n],o=s.getLaneNumber();if(o<0||o>Z.lanes.length-1)console.log("ERROR: Invalid lane index, cannot allocate cell: "+s.getNode().getName()+", laneNum="+o);else{var i=Z.lanes[o];m.getFlowDirection()===c.flow().HORIZONTAL?s.setCellLocation(l.x,i.y):s.setCellLocation(i.x,l.y)}}}function I(){var e;for(e=0;e<Z.levelPipes.length;e++)Z.levelPipes[e].adjustPipeExtend();for(e=0;e<Z.lanePipes.length;e++)Z.lanePipes[e].adjustPipeExtend();if(m.getFlowDirection()===c.flow().HORIZONTAL){if(e=0,Z.levels.length>0&&Z.levelPipes.length>0){for(;e<Z.levels.length;)Z.levelPipes[e].setRectLocation(e>0?Z.levels[e-1].x+Z.levels[e-1].width:0,0),Z.levels[e].setRectLocation(Z.levelPipes[e].x+Z.levelPipes[e].width,0),e++;Z.levelPipes[e].setRectLocation(Z.levels[e-1].x+Z.levels[e-1].width,0)}if(e=0,Z.lanes.length>0&&Z.lanePipes.length>0){for(;e<Z.lanes.length;)Z.lanePipes[e].setRectLocation(0,e>0?Z.lanes[e-1].y+Z.lanes[e-1].height:0),Z.lanes[e].setRectLocation(0,Z.lanePipes[e].y+Z.lanePipes[e].height),e++;Z.lanePipes[e].setRectLocation(0,Z.lanes[e-1].y+Z.lanes[e-1].height)}}else if(m.getFlowDirection()===c.flow().VERTICAL){if(e=0,Z.levels.length>0&&Z.levelPipes.length>0){for(;e<Z.levels.length;)Z.levelPipes[e].setRectLocation(0,e>0?Z.levels[e-1].y+Z.levels[e-1].height:0),Z.levels[e].setRectLocation(0,Z.levelPipes[e].y+Z.levelPipes[e].height),e++;Z.levelPipes[e].setRectLocation(0,Z.levels[e-1].y+Z.levels[e-1].height)}if(e=0,Z.lanes.length>0&&Z.lanePipes.length>0){for(;e<Z.lanes.length;)Z.lanePipes[e].setRectLocation(e>0?Z.lanes[e-1].x+Z.lanes[e-1].width:0,0),Z.lanes[e].setRectLocation(Z.lanePipes[e].x+Z.lanePipes[e].width,0),e++;Z.lanePipes[e].setRectLocation(Z.lanes[e-1].x+Z.lanes[e-1].width,0)}}for(e=0;e<Z.levels.length;e++)for(var l=Z.levels[e],t=l.getCells(),n=0;n<t.length;n++){var s=t[n],o=s.getLaneNumber();if(o<0||o>Z.lanes.length-1)console.log("ERROR: Invalid lane index, cannot allocate cell: "+s.getNode().getName()+", laneNum="+o);else{var i=Z.lanes[o];m.getFlowDirection()===c.flow().HORIZONTAL?s.adjustCellLocation(l.x,i.y):s.adjustCellLocation(i.x,l.y)}}}function F(){j&&console.log("@@@@ Flowlayout: reassignAllSegmentsToChannels");var e;for(e=0;e<Z.levelPipes.length;e++)Z.levelPipes[e].reassignSegmentsToChannels();for(e=0;e<Z.lanePipes.length;e++)Z.lanePipes[e].reassignSegmentsToChannels()}function x(){for(var e=Z.edgesList,l=0;l<e.length;l++){e[l].chainSegments()}}function E(){for(var e=Z.edgesList,l=0;l<e.length;l++){var t=e[l];if(t.chainSegments())for(var n=t.getSegments(),s=n[0],o=s.getStartPoint(),i=t.getSourcePort().getAttachmentPoint(),a=i.x-o.x,g=i.y-o.y,r=0;r<n.length;r++)0==r&&n[r].adjustStartPoint(a,g),n[r].adjustEndPoint(a,g)}}function M(){j&&console.log("@@@@ Flowlayout: allocateAllSegments");var e;for(e=0;e<Z.levelPipes.length;e++)Z.levelPipes[e].allocateSegments();for(e=0;e<Z.lanePipes.length;e++)Z.lanePipes[e].allocateSegments()}function D(){var e;for(e=0;e<Z.levelPipes.length;e++)Z.levelPipes[e].optimizePipe();for(e=0;e<Z.lanePipes.length;e++)Z.lanePipes[e].optimizePipe()}function H(){for(var e=0;e<Z.edgesList.length;e++)Z.edgesList[e].adjustSegmentsLocations()}var b,k,Z=this,j=!1,U=new u(this),z=e;Z.getFlowManager=function(){return z},Z.getNodesCollector=function(){return b},Z.getNonSuppressedNodes=function(){return k},Z.levels=[],Z.getLevels=function(){return Z.levels},Z.lanes=[],Z.getLanes=function(){return Z.lanes},Z.levelPipes=[],Z.getLevelPipes=function(){return Z.levelPipes},Z.lanePipes=[],Z.getLanePipes=function(){return Z.lanePipes},Z.getNodesNumberAtLevel=function(e){return e<0||e>=Z.levels.length?0:Z.levels[e].getNodes().length},Z.getNodesNumberAtLane=function(e){return e<0||e>=Z.lanes.length?0:Z.lanes[e].getNodes().length},Z.getStartLane=function(){return m.hasStartEndLevels()&&Z.levels.length>0&&Z.levelPipes.length>0?Z.levels[0].union(Z.levelPipes[0]):void 0},Z.getEndLane=function(){return m.hasStartEndLevels()&&Z.levels.length>0&&Z.levelPipes.length>0?Z.levels[Z.levels.length-1].union(Z.levelPipes[Z.levelPipes.length-1]):void 0},Z.getLeftSwimLane=function(){return m.hasSideSwimLanes()&&Z.lanes.length>0&&Z.lanePipes.length>0?Z.lanes[0].union(Z.lanePipes[0]):void 0},Z.getRightSwimLane=function(){return m.hasSideSwimLanes()&&Z.lanes.length>0&&Z.lanePipes.length>0?Z.lanes[Z.lanes.length-1].union(Z.lanePipes[Z.lanePipes.length-1]):void 0},Z.nodesList=[],Z.getNodesList=function(){return z.getModelHandler().getFlowNodes()},Z.edgesList=[],Z.getEdgesList=function(){return z.getModelHandler().getFlowLinks()},Z.layoutSize=new l(0,0),Z.getLayoutSize=function(){return Z.layoutSize},Z.layoutInProgress=!1,Z.isLayoutInProgress=function(){return Z.layoutInProgress},Z.nodeToCellMap=new t,Z.getNodeToCellMap=function(){return Z.nodeToCellMap};var B=[];Z.getBlockedCells=function(){return B},Z.addToBlockedCells=function(e){B=B.concat(e)},Z.doLayout=function(){var e=Date.now();document.body.style.cursor="wait",b=new w;var l=new P(this),t=new L(this);B=[],j&&console.log("========= DO LAYOUT =========");for(var n=0,o=!0;n<5&&o;){o=!1,Z.nodesList=z.getModelHandler().getFlowNodes(),Z.edgesList=z.getModelHandler().getFlowLinks(),l.adjustNodesInCanvas(),b.collectNodes(Z.nodesList),k=b.getAllNodes(),Z.levels=[],Z.lanes=[],Z.levelPipes=[],Z.lanePipes=[],Z.nodeToCellMap.clear();for(var g=0;g<Z.nodesList.length;g++)v.adjustSize(Z.nodesList[g]);var r,d=0,c=0,u=!0;a(l)||console.log("############ layoutNodes FAILED"),R(t,!0);var p=y();for(x(),F(),A(p),C(),R(t,!1),A(p),C(),E(),M(),p=h(t,"before loops"),H();d<20&&u;){for(c=0;c<20&&u;){if(u=!1,j&&console.log("%%% BEGIN OPTIMIZE_INNER "+d+"/"+c+"/"+n),r=U.checkAllCrossingsAtProcessNodes(),s(r)&&(j&&console.log("  +++===@@ checkAllCrossingsAtProcessNodes 1, result: "+N.getResultName(r)+", "+d+"/"+c),u=!0),r=U.checkAllCrossingsAtSideNodes(),s(r)&&(j&&console.log("  +++===@@ checkAllCrossingsAtSideNodes 1, result: "+N.getResultName(r)+", "+d+"/"+c),u=!0),r=U.checkAllOverlappingSegments(),s(r)&&(j&&console.log("  +++===@@ checkAllOverlappingSegments 1, result: "+N.getResultName(r)+", "+d+"/"+c),u=!0),r=U.checkAllSideBoxSegments(),s(r)&&(j&&console.log("   +++====@@@ checkAllSideBoxSegments 1, result: "+N.getResultName(r)+", "+d+"/"+c),u=!0,H(),p=S(),A(p)),r=U.checkAllCrossBoxSegments(),s(r)&&(j&&console.log("   +++====@@@ checkAllCrossBoxSegments 1, result: "+N.getResultName(r)+", "+d+"/"+c),u=!0,H(),p=S(),A(p)),r=U.checkAllOverlappingSegments(),s(r)&&(j&&console.log("  +++===@@ checkAllOverlappingSegments 2, result: "+N.getResultName(r)+", "+d+"/"+c),u=!0),r=U.checkOverlappingSegmentsAtNodes(k),i(r)){j&&console.log("  +++===@@ checkOverlappingSegmentsAcrossNodes 1, result: "+N.getResultName(r)+", "+d+"/"+c),z.getFlowDiagram().clearCanvas(),z.getModelHandler().cachePortOrders(Z.edgesList);var f=z.getModelHandler().getModelObjectUpdated(Z.nodesList,Z.edgesList);z.getModelHandler().buildContentModel(f,!1),z.getModelHandler().updatePortsLayout(Z.nodesList),o=!0;break}if(!(u&&c<19)){j&&console.log("##### ??? BREAK ??? OPTIMIZE_INNER: "+d+"/"+c+", doOptimize="+u+", proceed="+o);break}j&&console.log("###########  OPTIMIZE_INNER: "+d+"/"+c),H(),c++}if(o){j&&console.log("###### proceed,   REDO LAYOUT: "+d+"/"+c+"/"+n);break}u&&d<19&&(j&&console.log("###########  OPTIMIZE_OUTER: "+d+"/"+c),H(),H(),p=S(),A(p)),d++}n++,j&&console.log("%%%%====%%%% LAST PROCEED: "+d+"/"+c+"/"+n+" ========\n"),I(),H(),p=S(),A(p),D(),I(),H(),p=S(),A(p),j&&console.log("======== FINAL LAYOUT DONE: optimize steps = "+d+"/"+c+"/"+n+" ========\n\n")}z.getModelHandler().updateFlowNodes(Z.nodesList),z.getModelHandler().updateFlowLinks(Z.edgesList),Z.layoutSize=p,j&&console.log("TOTAL DURATION: "+(Date.now()-e)+" msec, w="+p.width+", h="+p.height+"\nDONE\n\n"),document.body.style.cursor="default"};Z.getEmptyCells=function(){for(var e=[],l=Z.nodeToCellMap.values(),t=0;t<Z.levels.length;t++)for(var n=Z.levels[t],s=0;s<Z.lanes.length;s++){for(var i=Z.lanes[s],a=!1,g=0;g<l.length;g++){var r=l[g];if(r.getLevelNumber()===n.getOrder()&&r.getLaneNumber()===i.getOrder()){a=!0;break}}if(!a){var d=new o(n.getOrder(),i.getOrder()),h=n.intersection(i);d.setRectBounds(h.x,h.y,h.width,h.height),e.push(d)}}return e},Z.getCellForNode=function(e){for(var l=Z.nodeToCellMap.values(),t=0;t<l.length;t++)if(l[t].getLevelNumber()==e.getLevelNumber()&&l[t].getLaneNumber()==e.getLaneNumber())return l[t]}}return R});