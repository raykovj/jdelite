define("modules/layout/nodesLayoutUtils",["modules/geometry/point","modules/graph/xPoint","modules/geometry/rectangle","modules/graph/cell","modules/graph/nodeCell","modules/graph/graphElement","modules/graph/graphNode","modules/graph/connector","modules/graph/corridor","modules/graph/pipe","modules/graph/segment","modules/diagram/diagramUtils","modules/graph/graphConstants"],function(e,t,r,n,o,g,u,a,i,f,s,l,d){var h=function(e,t){for(var r=0;r<e.length;r++)if(e[r].equals(t))return!0;return!1},N=function(e){for(var t=[],r=e.getInputPorts(),n=0;n<r.length;n++)for(var o=r[n].getEdgesList(),g=0;g<o.length;g++)o[g].getSourcePort().getNode()&&t.push(o[g].getSourcePort().getNode());return t},v=function(e){for(var t=[],r=e.getOutputPorts(),n=0;n<r.length;n++)for(var o=r[n].getEdgesList(),g=0;g<o.length;g++)o[g].getTargetPort().getNode()&&t.push(o[g].getTargetPort().getNode());return t},c=function(e,t){if(!e||!t)return!1;for(var r=v(e),n=0;n<r.length;n++)if(r[n].equals(t))return!0;return!1},L=function(e){for(var t=[],r=e.getOutputPorts(),n=0;n<r.length;n++)for(var o=r[n].getEdgesList(),g=0;g<o.length;g++){var u=o[g].getTargetPort();u&&u.getNode()&&t.indexOf(u.getNode())<0&&t.push(u.getNode())}return t},p=function(e,t){for(var r=[],n=e.getOutputPorts(),o=0;o<n.length;o++)if(n[o].getSide()===t)for(var g=n[o].getEdgesList(),u=0;u<g.length;u++)g[u].getTargetPort().getNode()&&r.push(g[u].getTargetPort().getNode());return r},m=function(e,t){for(var r=[],n=e.getInputPorts(),o=0;o<n.length;o++)if(n[o].getSide()===t)for(var g=n[o].getEdgesList(),u=0;u<g.length;u++)g[u].getSourcePort().getNode()&&r.push(g[u].getSourcePort().getNode());return r},E=function(e,t,r,n){for(var o=L(t),g=0;g<o.length;g++){var u=o[g];if(!(u.equals(e)||n.indexOf(u)>=0)){if(u.equals(r))return!0;if(n.push(u),E(e,u,r,n))return!0}}return!1},T=function(e,t){for(var r=0;r<e.length;r++)if(e[r].equals(t))return!0;return!1},S=function(e){var t=L(e);if(0==t.length)return 1;var r=1;e.getFlowType()===d.flowType().DECISION&&(r+=2);for(var n=0;n<t.length;n++)t[n].getLevelNumber()>e.getLevelNumber()&&(r+=S(t[n]));return r>1&&(e.getFlowType()!==d.flowType().START&&e.getFlowType()!==d.flowType().PROCESS&&e.getFlowType()!==d.flowType().IN_OUT||r--),e.setLaneFootprint(r),r},b=function(e){for(var t=0,r=0;r<e.length;r++)t+=S(e[r]);return t},P=function(e,t){return(e&t)>0},A=function(e,t){for(var r=L(t),n=0;n<r.length;n++)if(r[n].equals(e))return!0;return!1},O=function(e){if(0===e.length)return 0;for(var t=0,r=0;r<e.length;r++)t=Math.max(t,e[r].getLaneNumber());return t},y=function(e){if(0===e.length)return 0;for(var t=O(e),r=0;r<e.length;r++)e[r].getLaneNumber()>=0&&(t=Math.min(t,e[r].getLaneNumber()));return t},I=function(e){for(var t=0;t<e.length;t++)if(e[t].getLevelNumber()>=0&&e[t].getLaneNumber()>=0)return!0;return!1},F=function(e,t){for(var r=L(e),n=[],o=0;o<r.length;o++){var g=r[o];if(!g.equals(e)){if(g.equals(t))return!0;if(n.push(g),E(e,g,t,n))return!0}}return!1};return{getLeftLaneNodes:function(e){for(var t=[],r=0;r<e.length;r++)e[r].isLeftLaneNode()&&t.push(e[r]);return t},getRightLaneNodes:function(e){for(var t=[],r=0;r<e.length;r++)e[r].isRightLaneNode()&&t.push(e[r]);return t},hasAssignedLevels:function(e){for(var t=0;t<e.length;t++)if(e[t].getNodes().length>0)return!0;return!1},getCentralTargets:function(e,t){for(var r=L(e),n=t.slice(0),o=0;o<r.length;o++){var g=r[o];!g.isEndNode()&&!g.isLevelAssigned()&&n.indexOf(g)<0&&n.push(g)}return n},isAncestorNode:function(e,t){if(!e||!t)return!1;if(e===t)return!1;for(var r=e.getInputPorts(),n=0;n<r.length;n++)for(var o=r[n].getEdgesList(),g=0;g<o.length;g++){var u=o[g].getSourcePort().getNode();if(u&&u.equals(t))return!0}return!1},hasDecisionAncestor:function(e,t){for(var r=0;r<t.length;r++){var n=t[r];if(isAncestorNode(e,n)&&n.getFlowType()===d.flowType().DECISION)return n}return null},getDecisionParent:function(e){for(var t=e.getInputPorts(),r=0;r<t.length;r++)for(var n=t[r].getEdgesList(),o=0;o<n.length;o++){var g=n[o].getSourcePort().getNode();if(g&&g.getFlowType()===d.flowType().DECISION)return g}return null},getConnectedNodes:function(e,t){for(var r=[],n=0;n<e.length;n++)c(e[n],t)&&r.push(node);return r},areNodesConnected:function(e,t){return c(e,t)||c(t,e)},areNodesConnectedSideToSide:function(e,t,r,n){var o=m(e,t);if(h(o,r))return!0;var g=p(e,t);if(h(g,r))return!0;var u=m(r,n);if(h(u,e))return!0;var a=p(r,n);return!!h(a,e)},getStartNodes:function(e){for(var t=[],r=0;r<e.length;r++)e[r].isStartNode()&&t.push(e[r]);return t},getEndNodes:function(e){for(var t=[],r=0;r<e.length;r++)e[r].isEndNode()&&t.push(e[r]);return t},getNodeStartSegmentsAtSide:function(e,t){for(var r=e.getOutputPorts(),n=[],o=0;o<r.length;o++)if(r[o].getSide()===t)for(var g=r[o].getEdgesList(),u=0;u<g.length;u++)g[u].getStartSegment()&&n.push(g[u].getStartSegment());return n},getNodeEndSegmentsAtSide:function(e,t){for(var r=e.getInputPorts(),n=[],o=0;o<r.length;o++)if(r[o].getSide()===t)for(var g=r[o].getEdgesList(),u=0;u<g.length;u++)g[u].getEndSegment()&&n.push(g[u].getEndSegment());return n},getUnconnectedNodes:function(e){for(var t=[],r=0;r<e.length;r++)e[r].hasConnections()||t.push(e[r]);return t},areAllUnconnected:function(e){for(var t=0;t<e.length;t++)if(e[t].hasConnections())return!1;return!0},getNodesWithConnections:function(e){for(var t=[],r=0;r<e.length;r++)e[r].hasConnections()&&t.push(e[r]);return t},getNodesWithNoInputs:function(e){for(var t=[],r=0;r<e.length;r++)0===N(e[r]).length&&t.push(e[r]);return t},getNodesNoInputsWithOutputs:function(e){for(var t=[],r=0;r<e.length;r++)0===N(e[r]).length&&v(e[r]).length>0&&t.push(e[r]);return t},getSourceNodes:function(e){for(var t=[],r=e.getInputPorts(),n=0;n<r.length;n++)for(var o=r[n].getEdgesList(),g=0;g<o.length;g++){var u=o[g].getSourcePort();u&&u.getNode()&&t.indexOf(u.getNode())<0&&t.push(u.getNode())}return t},getTargetNodesOfNode:function(e){return L(e)},getDecisionNodes:function(e){for(var t=[],r=0;r<e.length;r++)e[r].getFlowType()===d.flowType().DECISION&&t.push(e[r]);return t},areNodesInSameTree:function(e,t){return!(!F(e,t)&&!F(t,e))},isNodeInSameNodesTree:function(e,t){for(var r=0;r<t.length;r++){var n=t[r];if(F(n,e)||F(e,n))return!0}return!1},hasFlowConnectionFromTo:function(e,t){return F(e,t)},getLevelUnallocatedTargetNodes:function(e){for(var t=[],r=e.getOutputPorts(),n=0;n<r.length;n++)for(var o=r[n].getEdgesList(),g=0;g<o.length;g++){var a=o[g].getTargetPort();a.getNode().getLevelNumber()===u.LEVEL_UNDEF&&(T(t,a.getNode())||t.push(a.getNode()))}return t},getLaneUnallocatedTargetNodes:function(e){for(var t=[],r=e.getOutputPorts(),n=0;n<r.length;n++)for(var o=r[n].getEdgesList(),g=0;g<o.length;g++){var a=o[g].getTargetPort();a.getNode().getLaneNumber()===u.LANE_UNDEF&&(T(t,a.getNode())||t.push(a.getNode()))}return t},getOverlappingNodes:function(e){for(var t=[],r=0;r<e.length-1;r++)for(var n=e[r],o=r+1;o<e.length;o++){var g=e[o];n.getLevelNumber()===g.getLevelNumber()&&n.getLaneNumber()===g.getLaneNumber()&&t.push(g)}return t},getUnallocatedNodes:function(e){for(var t=[],r=0;r<e.length;r++)(e[r].getLevelNumber()<0||e[r].getLaneNumber()<0)&&t.push(e[r]);return t},getStringListOfNodes:function(e){for(var t=[],r=0;r<e.length;r++){var n=e[r];r>0&&t.push("\n"),t.push(n.getName()+"("+n.getLevelNumber()+", "+n.getLaneNumber()+")")}return t.valueOf()},getNonSuppressedNodes:function(e){for(var t=[],r=0;r<e.length;r++)e[r].isSuppressed()||t.push(e[r]);return t},getNodesAtLevel:function(e,t){for(var r=[],n=0;n<e.length;n++)e[n].getLevelNumber()===t&&r.push(e[n]);return r},getNodesAtLane:function(e,t){for(var r=[],n=0;n<e.length;n++)e[n].getLaneNumber()===t&&r.push(e[n]);return r},getNodesLevelRange:function(e){if(0===e.length)return[0,0];for(var t=Number.MAX_VALUE,r=0,n=0;n<e.length;n++)e[n].getLevelNumber()>=0&&(t=Math.min(t,e[n].getLevelNumber()),r=Math.max(r,e[n].getLevelNumber()));return t<Number.MAX_VALUE?[t,r]:[0,r]},getNodesLaneRange:function(e){if(0===e.length)return[0,0];for(var t=Number.MAX_VALUE,r=0,n=0;n<e.length;n++)e[n].getLaneNumber()>=0&&(t=Math.min(t,e[n].getLaneNumber()),r=Math.max(r,e[n].getLaneNumber()));return t<Number.MAX_VALUE?[t,r]:[0,r]},getMaxLaneIndex:function(e){return O(e)},getMinLaneIndex:function(e){return y(e)},getFirstEmptyLaneIndex:function(e,t,r){for(var n=t;n<r;n++)if(0===e[n].getNodes().length)return n;return-1},getFirstNonEmptyCentralLaneIndex:function(e){for(var t=0;t<e.length;t++){var r=e[t];if(!r.isLeftLane()&&(r.getNodes().length>0&&I(r.getNodes())))return t}return-1},getLastNonEmptyCentralLaneIndex:function(e){for(var t=e.length-1;t>=0;t--){var r=e[t];if(!r.isRightLane()&&(r.getNodes().length>0&&I(r.getNodes())))return t}return-1},getEmptyLanesNumber:function(e,t,r){for(var n=0,o=t;o<=r;o++)0===e[o].getNodes().length&&n++;return n},getCentralLevelsNumber:function(e){for(var t=0,r=0;r<e.length;r++)e[r].isStartLevel()||e[r].isEndLevel()||t++;return t},getCentralLanesNumber:function(e){for(var t=0,r=0;r<e.length;r++)e[r].isLeftLane()||e[r].isRightLane()||t++;return t},detachAll:function(e){for(var t=0;t<e.length;t++)e[t].detach()},getDescendantsTreeWidthByLevel:function(e){var t=e.getNodes();return b(t)},getAverageLanePosition:function(e){for(var t=0,r=0,n=0;n<e.length;n++){var o=e[n].getLaneNumber();o>u.LANE_UNDEF&&(t+=o,r++)}return r>0?Math.floor(t/r):0},getNewLanePosition:function(e,t,r,n){if(!e.getNodeAtLane(t)&&t>=r&&t<=n)return t;for(var o=1;o<=n-t||o<=t-r;){if(o<=n-t&&!e.getNodeAtLane(t+o))return t+o;if(o<=t-r&&!e.getNodeAtLane(t-o))return t-o;o++}return u.LANE_UNDEF},getDecisionChildPosition:function(e,t,r){var n=e.getLaneNumber();if(!e.isDecisionNode())return n;for(var o=e.getOutputPorts(),g=0;g<o.length;g++)for(var u=o[g],a=u.getEdgesList(),i=0;i<a.length;i++){var f=a[i].getTargetPort().getNode();if(t.equals(f)){var s=u.getSide();if(P(s,d.nodeSide().FRONT))return n;var l=1,h=t.getLaneFootprint();return l+=Math.floor(h/2),r==d.flow().VERTICAL?P(s,d.nodeSide().LEFT)?n+l:n-l:P(s,d.nodeSide().LEFT)?n-l:n+l}}return n},getNextLanePositionInLevel:function(e,t,r,n){for(var o=e.getCells(),g=[],a=0;a<o.length;a++)g.push(o[a].getLaneNumber());for(var i=r;i<=n;i++){var f=!1;for(a=0;a<g.length;a++)if(i===g[a]){f=!0;break}if(!f)return i}return u.LANE_UNDEF},isNodeTargetOf:function(e,t){for(var r=0;r<t.length;r++)if(!t[r].equals(e)&&A(e,t[r]))return!0;return!1},getFirstCenterEmptyLevelIndex:function(e){for(var t=0;t<e.length;t++){var r=e[t];if(!r.isStartLevel()){var n=r.getNodes();if(0===n.length)return r.getOrder();for(var o=0,g=0;g<n.length;g++)n[g].getFlowType()!=d.flowType().LEFT_TOP&&n[g].getFlowType()!=d.flowType().RIGHT_BOTTOM&&o++;if(0===o)return r.getOrder()}}return u.LEVEL_UNDEF}}});