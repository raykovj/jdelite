define("modules/layout/pipeUtils",["modules/geometry/rectangle","modules/graph/pipe","modules/graph/cell","modules/graph/segmentChannel","modules/graph/graphConstants","modules/layout/layoutUtils","modules/layout/nodesLayoutUtils","modules/layout/edgesLayoutUtils","modules/diagram/diagramUtils","modules/settings/config"],function(e,t,o,s,r,l,n,i,g,a){function d(e){function t(e){for(var t=e.getInputPorts(),o="ports: ",s=0;s<t.length;s++)o+=t[s].getName()+"("+t[s].getOrder()+"), ";return o}function o(e,t,o,s){var i,g=r.result().OK,a=n.getNodeStartSegmentsAtSide(e,t),d=n.getNodeEndSegmentsAtSide(e,t),u=a.concat(d),S=n.getNodeStartSegmentsAtSide(o,s),p=n.getNodeEndSegmentsAtSide(o,s),N=S.concat(p);if(0===u.length||0===N.length)return g;if(e.getLevelNumber()!==o.getLevelNumber())return g;for(i=0;i<u.length;i++)for(var f=u[i],m=f.getEdge(),T=0;T<N.length;T++){var F=N[T],O=F.getEdge();if(!m.equals(O)&&l.areOverlapping(f,F)){var A=m.getSourceNode(),E=m.getTargetNode(),h=O.getSourceNode(),y=O.getTargetNode();(A.isDecisionNode()||E.isDecisionNode())&&m.setPipesOnly(!0),(h.isDecisionNode()||y.isDecisionNode())&&O.setPipesOnly(!0),t!==r.nodeSide().RIGHT&&t!==r.nodeSide().LEFT||!A.isDecisionNode()?s!==r.nodeSide().RIGHT&&s!==r.nodeSide().LEFT||!h.isDecisionNode()?(m.isStartSegment(f)?m.setSourceShift(r.portShift().UP):m.setTargetShift(r.portShift().UP),O.isStartSegment(F)?O.setSourceShift(r.portShift().DOWN):O.setTargetShift(r.portShift().DOWN)):h.modifyEnds():A.modifyEnds(),g=r.result().REDO_LAYOUT,c&&console.log("++?? APART IN LEVEL: edges:\n\tedgeA = "+m.getName()+", srcSh="+m.getSourceShift()+", trgSh="+m.getTargetShift()+"\n\tedgeB = "+O.getName()+", srcSh="+O.getSourceShift()+", trgSh="+O.getTargetShift()),!0;break}}return g}function s(e,t,o,s){var i,g=r.result().OK,a=n.getNodeStartSegmentsAtSide(e,t),d=n.getNodeEndSegmentsAtSide(e,t),u=a.concat(d),S=n.getNodeStartSegmentsAtSide(o,s),p=n.getNodeEndSegmentsAtSide(o,s),N=S.concat(p);if(0===u.length||0===N.length)return g;var f=(e.getLevelNumber(),e.getLaneNumber());o.getLevelNumber();if(f!==o.getLaneNumber())return g;for(i=0;i<u.length;i++)for(var m=u[i],T=m.getEdge(),F=0;F<N.length;F++){var O=N[F],A=O.getEdge();if(!T.equals(A)&&l.areOverlapping(m,O)){var E=T.getSourceNode(),h=T.getTargetNode(),y=A.getSourceNode(),R=A.getTargetNode();(E.isDecisionNode()||h.isDecisionNode())&&T.setPipesOnly(!0),(y.isDecisionNode()||R.isDecisionNode())&&A.setPipesOnly(!0),t===r.nodeSide().FRONT&&E.isDecisionNode()?E.modifyEnds():s===r.nodeSide().FRONT&&y.isDecisionNode()?y.modifyEnds():(T.isStartSegment(m)?T.setSourceShift(r.portShift().UP):T.setTargetShift(r.portShift().UP),A.isStartSegment(O)?A.setSourceShift(r.portShift().DOWN):A.setTargetShift(r.portShift().DOWN)),g=r.result().REDO_LAYOUT,c&&console.log("++?? NEXT IN LANE: edges:\n\tedgeA = "+T.getName()+", srcSh="+T.getSourceShift()+", trgSh="+T.getTargetShift()+"\n\tedgeB = "+A.getName()+", srcSh="+A.getSourceShift()+", trgSh="+A.getTargetShift()),!0}}return g}var d=this;d.layout=e;var c=(Math.floor(r.segmentsGap().MIN/2),!1);d.isFixOrRetry=function(e){return e===r.result().HAS_FIX||e===r.result().RETRY_FIX||e===r.result().FAILED},d.isRetryRedoOrFail=function(e){return e===r.result().RETRY_FIX||e===r.result().REDO_LAYOUT||e===r.result().FAILED},d.checkAllCrossingsAtProcessNodes=function(){c&&console.log("============@@@@@@@@@@@@@@@@@ pipeUtils: checkAllCrossingsAtProcessNodes");var e,t,o,s,l,n=r.result().OK;for(e=0;e<d.layout.getNonSuppressedNodes().length;e++)t=d.layout.getNonSuppressedNodes()[e],t.isAllocated()&&(o=t.getLevelNumber(),t.getFlowType()!==r.flowType().PROCESS&&t.getFlowType()!==r.flowType().IN_OUT&&t.getFlowType()!==r.flowType().START||(s=d.layout.levelPipes[o+1],l=u(t,s),d.isFixOrRetry(l)&&(n=l,c&&console.log(" RESULT at FRONT for "+t.getName()+": "+n),!0)));for(e=0;e<d.layout.getNonSuppressedNodes().length;e++)t=d.layout.getNonSuppressedNodes()[e],t.isAllocated()&&(o=t.getLevelNumber(),t.getFlowType()!==r.flowType().PROCESS&&t.getFlowType()!==r.flowType().IN_OUT&&t.getFlowType()!==r.flowType().END||(s=d.layout.levelPipes[o],l=p(t,s),d.isFixOrRetry(l)&&(n=l,c&&console.log(" RESULT at BACK for "+t.getName()+": "+n))));return n};var u=function(e,t){for(var o=r.result().OK,s=[],n=e.getOutputPorts(),i=0;i<n.length;i++)n[i].getSide()===r.nodeSide().FRONT&&(s=s.concat(n[i].getEdgesList()));if(s.length>=2){for(var g=0;g<20;){if((o=l.checkFrontCrossings(e,s,t))===r.result().OK)return c&&console.log("!!! Resolved FRONT crossings, attempts="+g+", "+e.getName()),o;if(o===r.result().FAILED){c&&console.log("##BAD## checkFrontSegmentsCrossingsAtNode FAILED, attempts="+g+", "+e.getName());break}o!==r.result().HAS_FIX&&o!==r.result().RETRY_FIX||c&&console.log("## checkFrontSegmentsCrossingsAtNode HAS FIX, attempts="+g+", "+e.getName()),g++}o!==r.result().FAILED&&20!=g||(c&&console.log("## EXIT: Attempts to resolve front crossings at node "+e.getName()+", attempts="+g),o=r.result().FAILED)}return o};d.checkAllCrossingsAtProcessNodesNEXT=function(){c&&console.log("============@@@@@@@@@@@@@@@@@ pipeUtils: checkAllCrossingsAtProcessNodes");var e,t,o,s,l;for(e=0;e<d.layout.getNonSuppressedNodes().length;e++)if(t=d.layout.getNonSuppressedNodes()[e],t.isAllocated()&&(o=t.getLevelNumber(),(t.getFlowType()===r.flowType().PROCESS||t.getFlowType()===r.flowType().IN_OUT||t.getFlowType()===r.flowType().START)&&(s=d.layout.levelPipes[o+1],l=S(t,s),d.isFixOrRetry(l)))){c&&console.log(" RESULT at FRONT for "+t.getName()+": "+l),!0;break}return l};var S=function(e,t){for(var o=r.result().OK,s=[],n=e.getOutputPorts(),i=0;i<n.length;i++)n[i].getSide()===r.nodeSide().FRONT&&(s=s.concat(n[i].getEdgesList()));if(s.length>=2){for(var g=0;g<20;){if((o=l.checkFrontCrossingsNEXT(e,s,t))===r.result().OK)return c&&console.log("!!! Resolved FRONT crossings, attempts="+g+", "+e.getName()),o;if(o===r.result().FAILED){c&&console.log("##BAD## checkFrontSegmentsCrossingsAtNodeNEXT FAILED, attempts="+g+", "+e.getName());break}if(o===r.result().HAS_FIX||o===r.result().RETRY_FIX){c&&console.log("## checkFrontSegmentsCrossingsAtNodeNEXT HAS FIX, attempts="+g+", "+e.getName());break}g++}o!==r.result().FAILED&&20!=g||(c&&console.log("## EXIT: Attempts to resolve front crossings at node "+e.getName()+", attempts="+g),o=r.result().FAILED)}return o},p=function(e,o){for(var s=r.result().OK,n=[],i=e.getInputPorts(),g=0;g<i.length;g++)i[g].getSide()===r.nodeSide().BACK&&(n=n.concat(i[g].getEdgesList()));if(n.length>=2){for(var a=0;a<20;){if((s=l.checkBackCrossings(e,n,o))===r.result().OK)return c&&console.log("!!! Resolved back crossings, attempts="+a+", "+e.getName()),s;if(s===r.result().FAILED){c&&console.log("## checkBackSegmentsCrossingsAtNode FAILED, attempts="+a+", "+e.getName());break}s!==r.result().HAS_FIX&&s!==r.result().RETRY_FIX||c&&console.log("##### checkBackSegmentsCrossingsAtNode HAS FIX, attempts="+a+", "+e.getName()+", "+t(e)),a++}s!==r.result().FAILED&&20!==a||(c&&console.log("## EXIT: FAILED to resolve back crossings at node "+e.getName()+", attempts="+a),s=r.result().FAILED)}return s};d.checkAllCrossingsAtSideNodes=function(){c&&console.log("============@@@@@@@@@@@@@@@@@ pipeUtils: checkAllCrossingsAtSideNodes");for(var e,t,o,s=r.result().OK,l=0;l<d.layout.getNonSuppressedNodes().length;l++){var n=d.layout.getNonSuppressedNodes()[l];if(n.isAllocated()){if((n.getFlowType()===r.flowType().PROCESS||n.getFlowType()===r.flowType().IN_OUT||n.getFlowType()===r.flowType().LEFT_TOP)&&(a.getFlowDirection()===r.flow().HORIZONTAL?(t=r.nodeSide().RIGHT,o=d.layout.lanePipes[n.getLaneNumber()+1]):a.getFlowDirection()===r.flow().VERTICAL&&(t=r.nodeSide().LEFT,o=d.layout.lanePipes[n.getLaneNumber()+1]),s=N(n,t,o),d.isFixOrRetry(s))){c&&console.log(" RESULT at checkSideSegmentsCrossingsAtNode: "+n.getName()+", side: "+g.getNodeSideName(t)+": "+s),e=!0;break}if(e)return s;if((n.getFlowType()===r.flowType().PROCESS||n.getFlowType()===r.flowType().IN_OUT||n.getFlowType()===r.flowType().RIGHT_BOTTOM)&&(a.getFlowDirection()===r.flow().HORIZONTAL?(t=r.nodeSide().LEFT,o=d.layout.lanePipes[n.getLaneNumber()]):a.getFlowDirection()===r.flow().VERTICAL&&(t=r.nodeSide().RIGHT,o=d.layout.lanePipes[n.getLaneNumber()]),s=N(n,t,o),d.isFixOrRetry(s))){c&&console.log(" RESULT at checkSideSegmentsCrossingsAtNode: "+n.getName()+", side: "+g.getNodeSideName(t)+": "+s),e=!0;break}}}return s},d.checkAllCrossingsAtSideNodesNEXT=function(){c&&console.log("============@@@@@@@@@@@@@@@@@ pipeUtils: checkAllCrossingsAtSideNodes");for(var e,t=r.result().OK,o=0;o<d.layout.getNonSuppressedNodes().length;o++){var s=d.layout.getNonSuppressedNodes()[o];if(s.isAllocated()){var l,n;s.getName();if((s.getFlowType()===r.flowType().PROCESS||s.getFlowType()===r.flowType().IN_OUT||s.getFlowType()===r.flowType().LEFT_TOP)&&(a.getFlowDirection()===r.flow().HORIZONTAL?(l=r.nodeSide().RIGHT,n=d.layout.lanePipes[s.getLaneNumber()+1]):a.getFlowDirection()===r.flow().VERTICAL&&(l=r.nodeSide().LEFT,n=d.layout.lanePipes[s.getLaneNumber()+1]),t=f(s,l,n),d.isFixOrRetry(t))){c&&console.log(" RESULT at checkSideSegmentsCrossingsAtNodeNEXT: "+s.getName()+", side: "+g.getNodeSideName(l)+": "+t),e=!0;break}if(e)return t;if((s.getFlowType()===r.flowType().PROCESS||s.getFlowType()===r.flowType().IN_OUT||s.getFlowType()===r.flowType().RIGHT_BOTTOM)&&(a.getFlowDirection()===r.flow().HORIZONTAL?(l=r.nodeSide().LEFT,n=d.layout.lanePipes[s.getLaneNumber()]):a.getFlowDirection()===r.flow().VERTICAL&&(l=r.nodeSide().RIGHT,n=d.layout.lanePipes[s.getLaneNumber()]),t=f(s,l,n),d.isFixOrRetry(t))){c&&console.log(" RESULT at checkSideSegmentsCrossingsAtNodeNEXT: "+s.getName()+", side: "+g.getNodeSideName(l)+": "+t),e=!0;break}}}return t};var N=function(e,t,o){var s=r.result().OK,i=e.getPortsForSide(t);e.getRefPortsForSide(t);if(i.length<=1)return s;var g=n.getNodeStartSegmentsAtSide(e,t),a=n.getNodeEndSegmentsAtSide(e,t),d=g.concat(a);if(d.length<=1)return s;for(var u=0;u<20;){if((s=l.checkSideCrossings(e,d,o))===r.result().OK){var S=20==u?"--- Not found":"!!! Resolved";c&&console.log("  "+S+" SIDE crossings, attempts="+u+", "+e.getName());break}if(s===r.result().FAILED){c&&console.log("*** FAILED: SIDE crossings, attempts="+u+", "+e.getName());break}if(s===r.result().HAS_FIX||s===r.result().RETRY_FIX)break;u++}return s!=r.result().FAILED&&20!=u||(c&&console.log("**** Attempts to resolve SIDE crossings at node "+e.getName()+" failed or exceeded 20:\n"),s=r.result().FAILED),s},f=function(e,t,o){var s=r.result().OK,i=e.getPortsForSide(t);e.getRefPortsForSide(t);if(i.length<=1)return s;var g=n.getNodeStartSegmentsAtSide(e,t),a=n.getNodeEndSegmentsAtSide(e,t),d=g.concat(a);if(d.length<=1)return s;for(var u=0;u<20;){if((s=l.checkSideCrossingsNEXT(e,d,o))===r.result().OK){var S=20==u?"--- Not found":"!!! Resolved";c&&console.log("  "+S+" SIDE crossings, attempts="+u+", "+e.getName());break}if(s===r.result().FAILED){c&&console.log("*** FAILED: SIDE crossings, attempts="+u+", "+e.getName());break}if(s===r.result().HAS_FIX||s===r.result().RETRY_FIX)break;u++}return s!=r.result().FAILED&&20!=u||(c&&console.log("**** Attempts to resolve SIDE crossings at node "+e.getName()+" failed or exceeded 20:\n"),s=r.result().FAILED),s};d.checkAllOverlappingSegments=function(){c&&console.log("============@@@@@@@@@@@@@@@@@ pipeUtils: checkAllOverlappingSegments");var e,t,o=r.result().OK;for(e=0;e<d.layout.levelPipes.length;e++){var s=d.layout.levelPipes[e];if(o=d.checkForOverlappingSegment(s),d.isFixOrRetry(o)){c&&console.log(" RESULT at checkAllOverlappingSegments, levelPipe: "+s.getOrder()+": "+o),t=!0;break}}if(t)return o;for(e=0;e<d.layout.lanePipes.length;e++){var l=d.layout.lanePipes[e];if(o=d.checkForOverlappingSegment(l),d.isFixOrRetry(o)){c&&console.log(" RESULT at checkAllOverlappingSegments, lanePipe: "+l.getOrder()+": "+o),t=!0;break}}return o},d.checkAllSideBoxSegments=function(){c&&console.log("============@@@@@@@@@@@@@@@@@ pipeUtils: checkAllSideBoxSegments");var e,t,o=r.result().OK;for(e=0;e<d.layout.levelPipes.length;e++){var s=d.layout.levelPipes[e];if(o=d.checkForCrossingSegmentsInPipe(s,r.pipeXing().SIDE_BOX),d.isFixOrRetry(o)){c&&console.log(" RESULT at checkAllSideBoxSegments SIDE_BOX: levelPipe: "+s.getOrder()+": "+g.getResultName(o)),t=!0;break}}if(t)return o;for(e=0;e<d.layout.lanePipes.length;e++){var l=d.layout.lanePipes[e];if(o=d.checkForCrossingSegmentsInPipe(l,r.pipeXing().SIDE_BOX),d.isFixOrRetry(o)){c&&console.log(" RESULT at checkAllSideBoxSegments SIDE_BOX: lanePipe: "+l.getOrder()+": "+g.getResultName(o)),t=!0;break}}return o},d.checkAllCrossBoxSegments=function(){c&&console.log("============@@@@@@@@@@@@@@@@@ pipeUtils: checkAllCrossBoxSegments");var e,t,o;for(e=0;e<d.layout.levelPipes.length;e++){var s=d.layout.levelPipes[e];if(t=d.checkForCrossingSegmentsInPipe(s,r.pipeXing().CROSS_BOX),d.isFixOrRetry(t)){c&&console.log(" RESULT at checkAllCrossBoxSegments CROSS_BOX: levelPipe: "+s.getOrder()+": "+g.getResultName(t)),o=!0;break}}if(o)return t;for(e=0;e<d.layout.lanePipes.length;e++){var l=d.layout.lanePipes[e];if(t=d.checkForCrossingSegmentsInPipe(l,r.pipeXing().CROSS_BOX),d.isFixOrRetry(t)){c&&console.log("*** RESULT at checkAllCrossBoxSegments CROSS_BOX: lanePipe: "+l.getOrder()+": "+g.getResultName(t)),o=!0;break}}return t},d.checkCorridorsForSegmentsViolations=function(){var e,t=!1;for(e=0;e<d.layout.levels.length;e++){d.layout.levels[e].hasSegmentsViolations()&&(t=!0)}for(e=0;e<d.layout.lanes.length;e++){d.layout.lanes[e].hasSegmentsViolations()&&(t=!0)}return t},d.checkForOverlappingSegment=function(e){for(var t=0,o=r.result().OK;t<20;){if((o=l.checkOverlappingSegmentsInChannel(e))===r.result().OK){c&&console.log("++++ OK: NO overlapping: pipe="+e.getOrder());break}if(o===r.result().FAILED){c&&console.log("FAILED: overlapping, attempts="+t+", pipe: "+e.print()+":\n");break}if(o===r.result().HAS_FIX||o===r.result().RETRY_FIX){c&&console.log("HAS OR RETRY FIX: overlapping, attempts="+t+", "+e.print()+":\n");break}t++}return o!=r.result().FAILED&&20!=t||(c&&console.log("\n*** FAILED to resolve pipe overlapping segments:\n"+e.print()+"\n"),o=r.result().FAILED),o},d.checkForCrossingSegmentsInPipe=function(e,t){for(var o=0,s=r.result().OK;o<10;){if((s=l.checkSegmentsForCrossings(e,t))===r.result().OK){c&&console.log("OK: crossings, attempts="+o+", type:"+e.getType()+", order:"+e.getOrder());break}if(s===r.result().FAILED){c&&console.log("FAILED: crossings, attempts="+o+", type:"+e.getType()+", order:"+e.getOrder()+", xing: "+t);break}s!==r.result().HAS_FIX&&s!==r.result().RETRY_FIX||c&&console.log(g.getResultName(s)+": crossings, attempts="+o+", type:"+e.getType()+", order:"+e.getOrder()+", "+g.getCrossingName(t)),o++}return s!==r.result().FAILED&&10!==o||(c&&console.log("******* ATTENTION: Failed to resolve pipe crossings, attempts="+o+", type:"+e.getType()+", order:"+e.getOrder()+", xing: "+t+", result: "+g.getResultName(s)),s=r.result().FAILED),s},d.checkOverlappingSegmentsAtNodes=function(t){for(var l,n,g,c=r.result().OK,u=0;u<t.length;u++)for(var S=t[u],p=S.getLevelNumber(),N=S.getLaneNumber(),f=u+1;f<t.length;f++){var m=t[f],T=m.getLevelNumber(),F=m.getLaneNumber();if(p===T){var O=!1,A=N<F?N+1:F+1,E=N<F?F-1:N-1;i.isLaneRangeEmptyForLevel(d.layout.lanes,p,A,E,e.getBlockedCells())?O=!0:1===Math.abs(N-F)&&(O=!0),O&&(a.getFlowDirection()===r.flow().HORIZONTAL?(l=N<F?r.nodeSide().RIGHT:r.nodeSide().LEFT,n=N<F?r.nodeSide().LEFT:r.nodeSide().RIGHT):(l=N<F?r.nodeSide().LEFT:r.nodeSide().RIGHT,n=N<F?r.nodeSide().RIGHT:r.nodeSide().LEFT),g=o(S,l,m,n),d.isRetryRedoOrFail(g)&&(c=g))}else if(N===F&&p!==T){var h=!1,y=p<T?p+1:T+1,R=p<T?T-1:p-1;i.isLevelRangeEmptyForLane(d.layout.levels,N,y,R,e.getBlockedCells())?h=!0:1===Math.abs(p-T)&&(h=!0),h&&(a.getFlowDirection(),r.flow().HORIZONTAL,l=p<T?r.nodeSide().FRONT:r.nodeSide().BACK,n=p<T?r.nodeSide().BACK:r.nodeSide().FRONT,g=s(S,l,m,n),d.isRetryRedoOrFail(g)&&(c=g))}}return c}}return d});